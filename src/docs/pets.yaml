paths:
  /api/pets/withimage:
    post:
      summary: Crear una nueva mascota con imagen.
      tags:
        - Pets
      requestBody:
        required: true
        description: Datos de la mascota con imagen.
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - specie
                - birthDate
                - adopted
                - image
              properties:
                name:
                  type: string
                  description: Nombre de la mascota.
                specie:
                  type: string
                  description: Especie de la mascota.
                birthDate:
                  type: string
                  format: date
                  description: Fecha de nacimiento de la mascota.
                adopted:
                  type: boolean
                  description: Estado de adopcion de la mascota.
                image:
                  type: string
                  format: binary
                  description: Imagen de la mascota.
                # owner:
                #   type: string
                #   description: ID del dueño de la mascota.
      responses:
        "201":
          description: Mascota creada exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "400":
          description: Solicitud inválida.
        "500":
          description: Error inesperado en el servidor.

  /api/pets:
    post:
      summary: Crear una nueva mascota.
      tags:
        - Pets
      requestBody:
        required: true
        description: Datos de la mascota.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
      responses:
        "201":
          description: Mascota creada exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.
        "400":
          description: Solicitud inválida.
    get:
      summary: Obtener lista de mascotas.
      tags:
        - Pets
      responses:
        "200":
          description: Mascotas obtenidas exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pet"
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.

  /api/pets/{pid}:
    put:
      summary: Actualizar una mascota.
      tags:
        - Pets
      parameters:
        - name: pid
          in: path
          required: true
          description: ID de mascota a actualizar.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
      responses:
        "200":
          description: Mascota actualizada exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.
        "400":
          description: Solicitud inválida.
        "404":
          description: Recurso no encontrado.
    delete:
      summary: Eliminar una mascota.
      tags:
        - Pets
      parameters:
        - name: pid
          in: path
          required: true
          description: ID de mascota a eliminar.
          schema:
            type: string
      responses:
        "200":
          description: Mascota eliminada exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "500":
          description: Error inesperado en el servidor, no se pudo manejar el proceso.
        "400":
          description: Solicitud inválida.
        "404":
          description: Recurso no encontrado.

components:
  schemas:
    Pet:
      type: object
      properties:
        _id:
          type: string
          description: ID de la mascota.
          example: "65787285244ab4694ca2e64f"
        name:
          type: string
          description: Nombre de la mascota.
          example: "Fido"
        specie:
          type: string
          description: Especie de la mascota.
          example: "Perro"
        birthDate:
          type: string
          description: Fecha de nacimiento de la mascota.
          example: "2020-01-01"
        # adopted:
        #   type: boolean
        #   description: Estado de adopcion de la mascota.
        #   example: false
        # owner:
        #   type: string
        #   description: ID del dueño de la mascota.
        #   example: "657872b1244ab4694ca2e659"
        # image:
        #   type: string
        #   description: URL de la imagen de la mascota.
        #   example: "https://example.com/image.jpg"
