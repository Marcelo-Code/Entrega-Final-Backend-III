paths:
  /api/mocks/generateData:
    post:
      summary: Crear una nueva mascota con imagen.
      tags:
        - Mocks
      requestBody:
        required: true
        description: Números de mascotas y usuarios.
        content:
          application/json:
            schema:
              type: object
              properties:
                petQuantity:
                  type: number
                  description: Cantidad de mascotas a crear.
                  example: 10
                userQuantity:
                  type: number
                  description: Cantidad de usuarios a crear.
                  example: 10
      responses:
        "201":
          description: Mascotas y usuarios generados exitosamente.
        "400":
          description: Solicitud inválida.
        "500":
          description: Error inesperado en el servidor.

  /api/mocks/mockingpets:
    get:
      summary: Obtener lista de mascotas.
      tags:
        - Mocks

      responses:
        "200":
          description: Mascotas obtenidas exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"

  /api/mocks/mockingusers:
    get:
      summary: Obtener lista de usuarios.
      tags:
        - Mocks
      responses:
        "200":
          description: Usuarios obtenidas exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: La PK del usuario auto-generada por mongoDB.
          example: "657872b1244ab4694ca2e659"
        first_name:
          type: string
          description: nombre del usuario.
          example: "Pepe"
        last_name:
          type: string
          description: apellido del usuario.
          example: "Lopez"
        email:
          type: string
          description: email del usuario.
          example: "pepe@gmail.com"
        password:
          type: string
          description: contraseña encriptada del usuario.
          example: "$2398498$23749029409"
        role:
          type: string
          description: rol del usuario.
          example: "admin"
        pets:
          type: array
          description: Lista de mascotas.
          items:
            type: string
          example:
            - gato
            - perro
    Pet:
      type: object
      properties:
        _id:
          type: string
          description: ID de la mascota.
          example: "65787285244ab4694ca2e64f"
        name:
          type: string
          description: Nombre de la mascota.
          example: "Fido"
        specie:
          type: string
          description: Especie de la mascota.
          example: "Perro"
        birthDate:
          type: string
          format: date
          description: Fecha de nacimiento de la mascota.
          example: "2020-01-01"
        adopted:
          type: boolean
          description: Estado de adopcion de la mascota.
          example: false
        owner:
          type: string
          description: ID del dueño de la mascota.
          example: "657872b1244ab4694ca2e659"
        image:
          type: string
          description: URL de la imagen de la mascota.
          example: "https://example.com/image.jpg"
